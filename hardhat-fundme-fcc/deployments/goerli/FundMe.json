{
  "address": "0xFc8783e860FADf541bc7a61D3C7479b3A86aA707",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddres",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMAL_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        },
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "name": "getConversionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x64861033a6cf0805636413f981df3644b65f0400b198e46e0efa3c672aefe77a",
  "receipt": {
    "to": null,
    "from": "0x510899BB2302f10FaeD61c352B2Ace89C5e6d8C4",
    "contractAddress": "0xFc8783e860FADf541bc7a61D3C7479b3A86aA707",
    "transactionIndex": 32,
    "gasUsed": "1035896",
    "logsBloom": "0x
    "blockHash": "0xb63053279b943d733642db6249663b7924109206b96a3a8bcdd7df928baab72a",
    "transactionHash": "0x64861033a6cf0805636413f981df3644b65f0400b198e46e0efa3c672aefe77a",
    "logs": [],
    "blockNumber": 7686941,
    "cumulativeGasUsed": "19191485",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 1,
  "solcInputHash": "159b445480acbb1114197be40d63618f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddres\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMAL_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"getConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"//  Get funds from users\\n//  withdraw funds\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\n// Notes: manunally declare interface\\n// interface AggregatorV3Interface {\\n//   function decimals() external view returns (uint8);\\n\\n//   function description() external view returns (string memory);\\n\\n//   function version() external view returns (uint256);\\n\\n//   function getRoundData(uint80 _roundId)\\n//     external\\n//     view\\n//     returns (\\n//       uint80 roundId,\\n//       int256 answer,\\n//       uint256 startedAt,\\n//       uint256 updatedAt,\\n//       uint80 answeredInRound\\n//     );\\n\\n//   function latestRoundData()\\n//     external\\n//     view\\n//     returns (\\n//       uint80 roundId,\\n//       int256 answer,\\n//       uint256 startedAt,\\n//       uint256 updatedAt,\\n//       uint80 answeredInRound\\n//     );\\n// }\\n\\n// // import directly from github\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// custme error to save gas \\nerror NotOwner();\\n\\ncontract FundMe {\\n    // 1e18 = 10 * 1000000000000000000\\n    // use Constant and Immutable to gas efficient\\n    uint256 public constant MINIMAL_USD = 50 * 1e18; // use BlockChain Oracle Network to query the USD value to eth\\n\\n    address[] public funders;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    using PriceConverter for uint256;\\n\\n    address public immutable owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddres) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddres);\\n    }\\n\\n    function fund() public payable{\\n        // 1. how to send eth?\\n        // require(getConversionRate(msg.value) >= MINIMAL_USD, \\\"Didn't send  enough\\\"); // make sure the amount to sending at least 1 et\\n\\n        require(msg.value.getConversionRate() >= MINIMAL_USD, \\\"Didn't send  enough\\\"); // make sure the amount to sending at least 1 et\\n        // what is reverting?\\n        // undo any antion before, and send remaining \\n        funders.push(msg.sender);    \\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n\\n    function withdraw() public onlyOwner {\\n        for(uint256 funderIndex =0 ; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n        // send to eth\\n        // transfer\\n        //  send\\n        // call\\n        payable(msg.sender).transfer(address(this).balance);\\n\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        require(sendSuccess, \\\"Send failed!\\\");\\n        // call \\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call failed!\\\");\\n\\n    }\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner, \\\"Sender is not owner\\\");\\n        if(msg.sender != owner) { revert NotOwner();}\\n        _; // do the rest of the code\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n\\n    fallback() external payable{\\n        fund();\\n    }\\n\\n    function getPrice(AggregatorV3Interface priceFeed) public view returns(uint256){\\n        // 1. ABI\\n        // 2. Address of chainlink 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        (\\n            /*uint80 roundID*/,\\n            int256 price,\\n            /*uint startedAt*/,\\n            /*uint timeStamp*/,\\n            /*uint80 answeredInRound*/\\n        ) = priceFeed.latestRoundData();\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion(AggregatorV3Interface priceFeed) public view returns(uint256) {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) public view returns(uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUsd;\\n    }\\n\\n\\n}\",\"keccak256\":\"0x3dc2914fae453403f1ba588d1a2a93d92f6ab46263ee27fb6c758cd4375b45f5\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice() internal view returns(uint256){\\n        // 1. ABI\\n        // 2. Address of chainlink 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        (\\n            /*uint80 roundID*/,\\n            int256 price,\\n            /*uint startedAt*/,\\n            /*uint timeStamp*/,\\n            /*uint80 answeredInRound*/\\n        ) = priceFeed.latestRoundData();\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion() internal view returns(uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(uint256 ethAmount) internal view returns(uint256) {\\n        uint256 ethPrice = getPrice();\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x046156c479e9f99e360fb38091362e55e922b6ec647cc8fc6bf7e7095b9b70d9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012cf380380620012cf83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161115d62000172600039600081816103800152610750015261115d6000f3fe6080604052600436106100955760003560e01c806398e70cf91161005957806398e70cf914610195578063b60d4288146101d2578063c3f82bc3146101dc578063dc0d3dff14610219578063e65783ec14610256576100a4565b80633ccfd60b146100ae5780633e47d6f3146100c557806341976e0914610102578063741bef1a1461013f5780638da5cb5b1461016a576100a4565b366100a4576100a2610281565b005b6100ac610281565b005b3480156100ba57600080fd5b506100c361037e565b005b3480156100d157600080fd5b506100ec60048036038101906100e79190610a5f565b61067f565b6040516100f99190610aa5565b60405180910390f35b34801561010e57600080fd5b5061012960048036038101906101249190610afe565b610697565b6040516101369190610aa5565b60405180910390f35b34801561014b57600080fd5b50610154610728565b6040516101619190610b8a565b60405180910390f35b34801561017657600080fd5b5061017f61074e565b60405161018c9190610bb4565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b79190610bfb565b610772565b6040516101c99190610aa5565b60405180910390f35b6101da610281565b005b3480156101e857600080fd5b5061020360048036038101906101fe9190610afe565b6107ae565b6040516102109190610aa5565b60405180910390f35b34801561022557600080fd5b50610240600480360381019061023b9190610c3b565b610826565b60405161024d9190610bb4565b60405180910390f35b34801561026257600080fd5b5061026b610865565b6040516102789190610aa5565b60405180910390f35b6802b5e3af16b188000061029434610872565b10156102d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cc90610cc5565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610403576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104ae57600080828154811061042857610427610ce5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a690610d43565b915050610406565b50600067ffffffffffffffff8111156104ca576104c9610d8b565b5b6040519080825280602002602001820160405280156104f85781602001602082028036833780820191505090505b506000908051906020019061050e929190610955565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610555573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050509050806105cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c690610e06565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516105f590610e57565b60006040518083038185875af1925050503d8060008114610632576040519150601f19603f3d011682016040523d82523d6000602084013e610637565b606091505b505090508061067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290610eb8565b60405180910390fd5b5050565b60016020528060005260406000206000915090505481565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610f65565b5050509150506402540be400816107209190610fe0565b915050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061077e83610697565b90506000670de0b6b3a764000085836107979190611058565b6107a191906110c9565b9050809250505092915050565b60008173ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081f91906110fa565b9050919050565b6000818154811061083657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60008061087d6108ac565b90506000670de0b6b3a764000084836108969190611058565b6108a091906110c9565b90508092505050919050565b60008073d4a33860578de61dbabdc8bfdb98fd742fa7028e905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109379190610f65565b5050509150506402540be4008161094e9190610fe0565b9250505090565b8280548282559060005260206000209081019282156109ce579160200282015b828111156109cd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610975565b5b5090506109db91906109df565b5090565b5b808211156109f85760008160009055506001016109e0565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a2c82610a01565b9050919050565b610a3c81610a21565b8114610a4757600080fd5b50565b600081359050610a5981610a33565b92915050565b600060208284031215610a7557610a746109fc565b5b6000610a8384828501610a4a565b91505092915050565b6000819050919050565b610a9f81610a8c565b82525050565b6000602082019050610aba6000830184610a96565b92915050565b6000610acb82610a21565b9050919050565b610adb81610ac0565b8114610ae657600080fd5b50565b600081359050610af881610ad2565b92915050565b600060208284031215610b1457610b136109fc565b5b6000610b2284828501610ae9565b91505092915050565b6000819050919050565b6000610b50610b4b610b4684610a01565b610b2b565b610a01565b9050919050565b6000610b6282610b35565b9050919050565b6000610b7482610b57565b9050919050565b610b8481610b69565b82525050565b6000602082019050610b9f6000830184610b7b565b92915050565b610bae81610a21565b82525050565b6000602082019050610bc96000830184610ba5565b92915050565b610bd881610a8c565b8114610be357600080fd5b50565b600081359050610bf581610bcf565b92915050565b60008060408385031215610c1257610c116109fc565b5b6000610c2085828601610be6565b9250506020610c3185828601610ae9565b9150509250929050565b600060208284031215610c5157610c506109fc565b5b6000610c5f84828501610be6565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e642020656e6f75676800000000000000000000000000600082015250565b6000610caf601383610c68565b9150610cba82610c79565b602082019050919050565b60006020820190508181036000830152610cde81610ca2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4e82610a8c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d8057610d7f610d14565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206661696c6564210000000000000000000000000000000000000000600082015250565b6000610df0600c83610c68565b9150610dfb82610dba565b602082019050919050565b60006020820190508181036000830152610e1f81610de3565b9050919050565b600081905092915050565b50565b6000610e41600083610e26565b9150610e4c82610e31565b600082019050919050565b6000610e6282610e34565b9150819050919050565b7f63616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610ea2600c83610c68565b9150610ead82610e6c565b602082019050919050565b60006020820190508181036000830152610ed181610e95565b9050919050565b600069ffffffffffffffffffff82169050919050565b610ef781610ed8565b8114610f0257600080fd5b50565b600081519050610f1481610eee565b92915050565b6000819050919050565b610f2d81610f1a565b8114610f3857600080fd5b50565b600081519050610f4a81610f24565b92915050565b600081519050610f5f81610bcf565b92915050565b600080600080600060a08688031215610f8157610f806109fc565b5b6000610f8f88828901610f05565b9550506020610fa088828901610f3b565b9450506040610fb188828901610f50565b9350506060610fc288828901610f50565b9250506080610fd388828901610f05565b9150509295509295909350565b6000610feb82610f1a565b9150610ff683610f1a565b925082820261100481610f1a565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561103c5761103b610d14565b5b828205841483151761105157611050610d14565b5b5092915050565b600061106382610a8c565b915061106e83610a8c565b925082820261107c81610a8c565b9150828204841483151761109357611092610d14565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110d482610a8c565b91506110df83610a8c565b9250826110ef576110ee61109a565b5b828204905092915050565b6000602082840312156111105761110f6109fc565b5b600061111e84828501610f50565b9150509291505056fea26469706673582212208d8b1a42e8cfc47322575b73b95ebb83ac0f3240c90d6a62c80dad3551afb6a564736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c806398e70cf91161005957806398e70cf914610195578063b60d4288146101d2578063c3f82bc3146101dc578063dc0d3dff14610219578063e65783ec14610256576100a4565b80633ccfd60b146100ae5780633e47d6f3146100c557806341976e0914610102578063741bef1a1461013f5780638da5cb5b1461016a576100a4565b366100a4576100a2610281565b005b6100ac610281565b005b3480156100ba57600080fd5b506100c361037e565b005b3480156100d157600080fd5b506100ec60048036038101906100e79190610a5f565b61067f565b6040516100f99190610aa5565b60405180910390f35b34801561010e57600080fd5b5061012960048036038101906101249190610afe565b610697565b6040516101369190610aa5565b60405180910390f35b34801561014b57600080fd5b50610154610728565b6040516101619190610b8a565b60405180910390f35b34801561017657600080fd5b5061017f61074e565b60405161018c9190610bb4565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b79190610bfb565b610772565b6040516101c99190610aa5565b60405180910390f35b6101da610281565b005b3480156101e857600080fd5b5061020360048036038101906101fe9190610afe565b6107ae565b6040516102109190610aa5565b60405180910390f35b34801561022557600080fd5b50610240600480360381019061023b9190610c3b565b610826565b60405161024d9190610bb4565b60405180910390f35b34801561026257600080fd5b5061026b610865565b6040516102789190610aa5565b60405180910390f35b6802b5e3af16b188000061029434610872565b10156102d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cc90610cc5565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610403576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104ae57600080828154811061042857610427610ce5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a690610d43565b915050610406565b50600067ffffffffffffffff8111156104ca576104c9610d8b565b5b6040519080825280602002602001820160405280156104f85781602001602082028036833780820191505090505b506000908051906020019061050e929190610955565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610555573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050509050806105cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c690610e06565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516105f590610e57565b60006040518083038185875af1925050503d8060008114610632576040519150601f19603f3d011682016040523d82523d6000602084013e610637565b606091505b505090508061067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290610eb8565b60405180910390fd5b5050565b60016020528060005260406000206000915090505481565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610f65565b5050509150506402540be400816107209190610fe0565b915050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061077e83610697565b90506000670de0b6b3a764000085836107979190611058565b6107a191906110c9565b9050809250505092915050565b60008173ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081f91906110fa565b9050919050565b6000818154811061083657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60008061087d6108ac565b90506000670de0b6b3a764000084836108969190611058565b6108a091906110c9565b90508092505050919050565b60008073d4a33860578de61dbabdc8bfdb98fd742fa7028e905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109379190610f65565b5050509150506402540be4008161094e9190610fe0565b9250505090565b8280548282559060005260206000209081019282156109ce579160200282015b828111156109cd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610975565b5b5090506109db91906109df565b5090565b5b808211156109f85760008160009055506001016109e0565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a2c82610a01565b9050919050565b610a3c81610a21565b8114610a4757600080fd5b50565b600081359050610a5981610a33565b92915050565b600060208284031215610a7557610a746109fc565b5b6000610a8384828501610a4a565b91505092915050565b6000819050919050565b610a9f81610a8c565b82525050565b6000602082019050610aba6000830184610a96565b92915050565b6000610acb82610a21565b9050919050565b610adb81610ac0565b8114610ae657600080fd5b50565b600081359050610af881610ad2565b92915050565b600060208284031215610b1457610b136109fc565b5b6000610b2284828501610ae9565b91505092915050565b6000819050919050565b6000610b50610b4b610b4684610a01565b610b2b565b610a01565b9050919050565b6000610b6282610b35565b9050919050565b6000610b7482610b57565b9050919050565b610b8481610b69565b82525050565b6000602082019050610b9f6000830184610b7b565b92915050565b610bae81610a21565b82525050565b6000602082019050610bc96000830184610ba5565b92915050565b610bd881610a8c565b8114610be357600080fd5b50565b600081359050610bf581610bcf565b92915050565b60008060408385031215610c1257610c116109fc565b5b6000610c2085828601610be6565b9250506020610c3185828601610ae9565b9150509250929050565b600060208284031215610c5157610c506109fc565b5b6000610c5f84828501610be6565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e642020656e6f75676800000000000000000000000000600082015250565b6000610caf601383610c68565b9150610cba82610c79565b602082019050919050565b60006020820190508181036000830152610cde81610ca2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4e82610a8c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d8057610d7f610d14565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206661696c6564210000000000000000000000000000000000000000600082015250565b6000610df0600c83610c68565b9150610dfb82610dba565b602082019050919050565b60006020820190508181036000830152610e1f81610de3565b9050919050565b600081905092915050565b50565b6000610e41600083610e26565b9150610e4c82610e31565b600082019050919050565b6000610e6282610e34565b9150819050919050565b7f63616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610ea2600c83610c68565b9150610ead82610e6c565b602082019050919050565b60006020820190508181036000830152610ed181610e95565b9050919050565b600069ffffffffffffffffffff82169050919050565b610ef781610ed8565b8114610f0257600080fd5b50565b600081519050610f1481610eee565b92915050565b6000819050919050565b610f2d81610f1a565b8114610f3857600080fd5b50565b600081519050610f4a81610f24565b92915050565b600081519050610f5f81610bcf565b92915050565b600080600080600060a08688031215610f8157610f806109fc565b5b6000610f8f88828901610f05565b9550506020610fa088828901610f3b565b9450506040610fb188828901610f50565b9350506060610fc288828901610f50565b9250506080610fd388828901610f05565b9150509295509295909350565b6000610feb82610f1a565b9150610ff683610f1a565b925082820261100481610f1a565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561103c5761103b610d14565b5b828205841483151761105157611050610d14565b5b5092915050565b600061106382610a8c565b915061106e83610a8c565b925082820261107c81610a8c565b9150828204841483151761109357611092610d14565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110d482610a8c565b91506110df83610a8c565b9250826110ef576110ee61109a565b5b828204905092915050565b6000602082840312156111105761110f6109fc565b5b600061111e84828501610f50565b9150509291505056fea26469706673582212208d8b1a42e8cfc47322575b73b95ebb83ac0f3240c90d6a62c80dad3551afb6a564736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}