{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddres",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMAL_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithDraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        },
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "name": "getConversionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2718117043c3ef91e7ca598e9f4199e3720eb436d3746271f4bedee947c453a8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1100344",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x0716e31958257101155a570934253adf99b4f1843bc37f282a6f2d08deb521cf",
    "transactionHash": "0x2718117043c3ef91e7ca598e9f4199e3720eb436d3746271f4bedee947c453a8",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1100344",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "82bd9ddc21191a0538fb1f183ebfdcbf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddres\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMAL_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithDraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"getConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Jade\",\"details\":\"This implements price feed as a library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements fund\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"this functions fund this contract\"}},\"notice\":\"this contract is used to demo fund \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"//  Get funds from users\\n//  withdraw funds\\n\\n// SPDX-License-Identifier: MIT\\n// Pragma\\npragma solidity >=0.7.0 <0.9.0;\\n\\n// Notes: manunally declare interface\\n// interface AggregatorV3Interface {\\n//   function decimals() external view returns (uint8);\\n\\n//   function description() external view returns (string memory);\\n\\n//   function version() external view returns (uint256);\\n\\n//   function getRoundData(uint80 _roundId)\\n//     external\\n//     view\\n//     returns (\\n//       uint80 roundId,\\n//       int256 answer,\\n//       uint256 startedAt,\\n//       uint256 updatedAt,\\n//       uint80 answeredInRound\\n//     );\\n\\n//   function latestRoundData()\\n//     external\\n//     view\\n//     returns (\\n//       uint80 roundId,\\n//       int256 answer,\\n//       uint256 startedAt,\\n//       uint256 updatedAt,\\n//       uint80 answeredInRound\\n//     );\\n// }\\n\\n// // import directly from github\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// custme error to save gas \\nerror FundMe__NotOwner();\\n/**\\n * @title A contract for crowd funding\\n * @author Jade\\n * @notice this contract is used to demo fund \\n * @dev This implements price feed as a library\\n */\\ncontract FundMe {\\n    // Type Descriptions\\n\\n    // 1e18 = 10 * 1000000000000000000\\n    // use Constant and Immutable to gas efficient\\n    uint256 public constant MINIMAL_USD = 50 * 1e18; // use BlockChain Oracle Network to query the USD value to eth\\n\\n    address[] private s_funders; // private variable use less gas cost\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    using PriceConverter for uint256;\\n\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address priceFeedAddres) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddres);\\n    }\\n\\n    /**\\n     * @notice this functions fund this contract\\n     * @dev This implements fund\\n     */\\n    function fund() public payable{\\n        // 1. how to send eth?\\n        // require(getConversionRate(msg.value) >= MINIMAL_USD, \\\"Didn't send  enough\\\"); // make sure the amount to sending at least 1 et\\n\\n        require(getConversionRate(msg.value, s_priceFeed) >= MINIMAL_USD, \\\"Didn't send  enough\\\"); // make sure the amount to sending at least 1 et\\n        // what is reverting?\\n        // undo any antion before, and send remaining \\n        s_funders.push(msg.sender);    \\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n\\n    function withdraw() public onlyOwner {\\n        // Note: for loop using storage cost a lot of gas\\n        for(uint256 funderIndex =0 ; funderIndex < s_funders.length; funderIndex++) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        // send to eth\\n        // transfer\\n        //  send\\n        // call\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed!\\\");\\n\\n        // call \\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call failed!\\\");\\n\\n    }\\n    function cheaperWithDraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // Notes: !!!!mappings can't be in memory!!!\\n\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(i_owner).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call failed!\\\");\\n    }\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner, \\\"Sender is not owner\\\");\\n        if(msg.sender != i_owner) { revert FundMe__NotOwner();}\\n        _; // do the rest of the code\\n    }\\n\\n\\n    // Functions Order:\\n    // constructor\\n    // receive\\n    // fallback\\n    // external\\n    // public\\n    // internal\\n    // private\\n    // view / pure\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n\\n    fallback() external payable{\\n        fund();\\n    }\\n\\n    function getPrice(AggregatorV3Interface priceFeed) public view returns(uint256){\\n        // 1. ABI\\n        // 2. Address of chainlink 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        (\\n            /*uint80 roundID*/,\\n            int256 price,\\n            /*uint startedAt*/,\\n            /*uint timeStamp*/,\\n            /*uint80 answeredInRound*/\\n        ) = priceFeed.latestRoundData();\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion(AggregatorV3Interface priceFeed) public view returns(uint256) {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) public view returns(uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUsd;\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n}\",\"keccak256\":\"0xb6b6b9163678761a8e36b741446672d052a2efb291c650f7844caf21db142053\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice() internal view returns(uint256){\\n        // 1. ABI\\n        // 2. Address of chainlink 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        (\\n            /*uint80 roundID*/,\\n            int256 price,\\n            /*uint startedAt*/,\\n            /*uint timeStamp*/,\\n            /*uint80 answeredInRound*/\\n        ) = priceFeed.latestRoundData();\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion() internal view returns(uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(uint256 ethAmount) internal view returns(uint256) {\\n        uint256 ethPrice = getPrice();\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x046156c479e9f99e360fb38091362e55e922b6ec647cc8fc6bf7e7095b9b70d9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c806398e70cf91161006457806398e70cf91461017f5780639e87a5cd146101bc578063b60d4288146101e7578063c3f82bc3146101f1578063d7b4750c1461022e578063e65783ec1461026b576100af565b80630343fb25146100b95780633ccfd60b146100f657806341976e091461010d578063599b46191461014a578063893d20e814610154576100af565b366100af576100ad610296565b005b6100b7610296565b005b3480156100c557600080fd5b506100e060048036038101906100db9190610bf8565b6103b6565b6040516100ed9190610c3e565b60405180910390f35b34801561010257600080fd5b5061010b6103ff565b005b34801561011957600080fd5b50610134600480360381019061012f9190610c97565b61063f565b6040516101419190610c3e565b60405180910390f35b6101526106d0565b005b34801561016057600080fd5b50610169610994565b6040516101769190610cd3565b60405180910390f35b34801561018b57600080fd5b506101a660048036038101906101a19190610d1a565b6109bc565b6040516101b39190610c3e565b60405180910390f35b3480156101c857600080fd5b506101d16109f8565b6040516101de9190610db9565b60405180910390f35b6101ef610296565b005b3480156101fd57600080fd5b5061021860048036038101906102139190610c97565b610a22565b6040516102259190610c3e565b60405180910390f35b34801561023a57600080fd5b5061025560048036038101906102509190610dd4565b610a9a565b6040516102629190610cd3565b60405180910390f35b34801561027757600080fd5b50610280610ae1565b60405161028d9190610c3e565b60405180910390f35b6802b5e3af16b18800006102cc34600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166109bc565b101561030d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030490610e5e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610484576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561052f5760008082815481106104a9576104a8610e7e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061052790610edc565b915050610487565b50600067ffffffffffffffff81111561054b5761054a610f24565b5b6040519080825280602002602001820160405280156105795781602001602082028036833780820191505090505b506000908051906020019061058f929190610aee565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105b690610f84565b60006040518083038185875af1925050503d80600081146105f3576040519150601f19603f3d011682016040523d82523d6000602084013e6105f8565b606091505b505090508061063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063390610fe5565b60405180910390fd5b50565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561068d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b19190611092565b5050509150506402540be400816106c8919061110d565b915050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610755576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107d857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161078e575b5050505050905060005b8151811015610863576000828281518110610800576107ff610e7e565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061085b90610edc565b9150506107e2565b50600067ffffffffffffffff81111561087f5761087e610f24565b5b6040519080825280602002602001820160405280156108ad5781602001602082028036833780820191505090505b50600090805190602001906108c3929190610aee565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161090a90610f84565b60006040518083038185875af1925050503d8060008114610947576040519150601f19603f3d011682016040523d82523d6000602084013e61094c565b606091505b5050905080610990576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098790610fe5565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000806109c88361063f565b90506000670de0b6b3a764000085836109e19190611185565b6109eb91906111f6565b9050809250505092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a939190611227565b9050919050565b6000808281548110610aaf57610aae610e7e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6802b5e3af16b188000081565b828054828255906000526020600020908101928215610b67579160200282015b82811115610b665782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610b0e565b5b509050610b749190610b78565b5090565b5b80821115610b91576000816000905550600101610b79565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bc582610b9a565b9050919050565b610bd581610bba565b8114610be057600080fd5b50565b600081359050610bf281610bcc565b92915050565b600060208284031215610c0e57610c0d610b95565b5b6000610c1c84828501610be3565b91505092915050565b6000819050919050565b610c3881610c25565b82525050565b6000602082019050610c536000830184610c2f565b92915050565b6000610c6482610bba565b9050919050565b610c7481610c59565b8114610c7f57600080fd5b50565b600081359050610c9181610c6b565b92915050565b600060208284031215610cad57610cac610b95565b5b6000610cbb84828501610c82565b91505092915050565b610ccd81610bba565b82525050565b6000602082019050610ce86000830184610cc4565b92915050565b610cf781610c25565b8114610d0257600080fd5b50565b600081359050610d1481610cee565b92915050565b60008060408385031215610d3157610d30610b95565b5b6000610d3f85828601610d05565b9250506020610d5085828601610c82565b9150509250929050565b6000819050919050565b6000610d7f610d7a610d7584610b9a565b610d5a565b610b9a565b9050919050565b6000610d9182610d64565b9050919050565b6000610da382610d86565b9050919050565b610db381610d98565b82525050565b6000602082019050610dce6000830184610daa565b92915050565b600060208284031215610dea57610de9610b95565b5b6000610df884828501610d05565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e642020656e6f75676800000000000000000000000000600082015250565b6000610e48601383610e01565b9150610e5382610e12565b602082019050919050565b60006020820190508181036000830152610e7781610e3b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ee782610c25565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f1957610f18610ead565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610f6e600083610f53565b9150610f7982610f5e565b600082019050919050565b6000610f8f82610f61565b9150819050919050565b7f63616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610fcf600c83610e01565b9150610fda82610f99565b602082019050919050565b60006020820190508181036000830152610ffe81610fc2565b9050919050565b600069ffffffffffffffffffff82169050919050565b61102481611005565b811461102f57600080fd5b50565b6000815190506110418161101b565b92915050565b6000819050919050565b61105a81611047565b811461106557600080fd5b50565b60008151905061107781611051565b92915050565b60008151905061108c81610cee565b92915050565b600080600080600060a086880312156110ae576110ad610b95565b5b60006110bc88828901611032565b95505060206110cd88828901611068565b94505060406110de8882890161107d565b93505060606110ef8882890161107d565b925050608061110088828901611032565b9150509295509295909350565b600061111882611047565b915061112383611047565b925082820261113181611047565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561116957611168610ead565b5b828205841483151761117e5761117d610ead565b5b5092915050565b600061119082610c25565b915061119b83610c25565b92508282026111a981610c25565b915082820484148315176111c0576111bf610ead565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061120182610c25565b915061120c83610c25565b92508261121c5761121b6111c7565b5b828204905092915050565b60006020828403121561123d5761123c610b95565b5b600061124b8482850161107d565b9150509291505056fea264697066735822122010e6091e46477289fb4ca87b010fd803b110d68842988df770ac54d81d58f9ef64736f6c63430008110033",
  "devdoc": {
    "author": "Jade",
    "details": "This implements price feed as a library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements fund"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "this functions fund this contract"
      }
    },
    "notice": "this contract is used to demo fund ",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 60,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}